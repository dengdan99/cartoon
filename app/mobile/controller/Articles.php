<?php


namespace app\mobile\controller;


use app\model\Article;
use think\db\exception\ModelNotFoundException;
use think\facade\App;
use think\facade\View;

class Articles extends Base
{
    protected $articleService;
    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->articleService = app('articleService');
    }

    public function list()
    {
        $data = $this->articleService->getPaged(config('extra_config.booklist_page'), $this->end_point);
        unset($data['page']['query']['page']);
        $param = '';
        foreach ($data['page']['query'] as $k => $v) {
            $param .= '&' . $k . '=' . $v;
        }

        View::assign([
            'articles' => $data['articles'],
            'page' => $data['page'],
            'param' => $param,
            'header_title' => '最新文章'
        ]);
        return view($this->tpl);
    }

    public function index()
    {
        $id = input('id');
        $article = cache('article:' . $id);
        if ($article == false) {
            try {
                if ($this->end_point == 'id') {
                    $article = Article::with('book')->findOrFail($id);
                    $article['book']['param'] = $article['book']['id'];
                } else {
                    $article = Article::with('book')->where('unique_id', '=', $id)->findOrFail();
                    $article['book']['param'] = $article['book']['unique_id'];
                }
            } catch (ModelNotFoundException $e) {
                abort(404, $e->getMessage());
            }
        }
        $content = file_get_contents(App::getRootPath() . 'public/' . $article->content_url);
        $articles = Article::order('id', 'desc')->limit(10)->cache('topArticles')->select();
        foreach ($articles as &$val) {
            if ($this->end_point == 'id') {
                $val['param'] = $val['id'];
            } else {
                $val['param'] = $val['unique_id'];
            }
        }


        View::assign([
            'article' => $article,
            'content' => $content,
            'articles' => $articles,
            'header_title' => $article->book->book_name
        ]);
        return view($this->tpl);
    }
}